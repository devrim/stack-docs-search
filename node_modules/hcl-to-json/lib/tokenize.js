// Generated by CoffeeScript 1.11.1
var CHARS, TOKENS, debug, tokenize;

debug = (require('debug'))('hcltojson:tokenize');

TOKENS = require('./tokens');

CHARS = [[',', TOKENS.COMMA], [':', TOKENS.COLON], ['=', TOKENS.ASSIGN], ['{', TOKENS.LBRACE], ['}', TOKENS.RBRACE], ['[', TOKENS.LBRACKET], [']', TOKENS.RBRACKET], ['<<', TOKENS.HEREDOC]];

module.exports = tokenize = function(input) {
  var char, i, len, ref, regex, token;
  debug('input', input);
  input = input.replace(/#.+/igm, '');
  input = input.replace(/".+?"|\/\*[\s\S]*?\*\/|\/\/.*/gm, function(match) {
    if ((match != null ? match[0] : void 0) === '"') {
      return match;
    } else {
      return '';
    }
  });
  debug('comments.removed', input);
  for (i = 0, len = CHARS.length; i < len; i++) {
    ref = CHARS[i], char = ref[0], token = ref[1];
    char = "\\" + char;
    regex = RegExp("\".+?\"|(" + char + ")", "g");
    input = input.replace(regex, function(match, group) {
      if (!group) {
        return match;
      } else {
        return " " + token + " ";
      }
    });
  }
  debug('tokenized', input);
  input = input.replace(/\s+(?=([^"]*"[^"]*")*[^"]*$)/gm, TOKENS.SPACE);
  debug('spaces.marked', input);
  return input;
};
